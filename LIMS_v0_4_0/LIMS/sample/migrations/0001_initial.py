# Generated by Django 2.1.5 on 2019-01-16 17:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_name', models.CharField(blank=True, max_length=100)),
                ('aliquot_id', models.CharField(blank=True, max_length=100, null=True)),
                ('project_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sample_type', models.CharField(blank=True, choices=[('DNA', 'DNA'), ('RNA', 'RNA'), ('Cells', 'Cells'), ('RNASeq_Lib', 'RNASeq_Lib'), ('liWGS_Lib', 'liWGS_Lib'), ('CAPSeq_Lib', 'CAPSeq_Lib'), ('RNACAPSeq_Lib', 'RNACAPSeq_Lib')], max_length=100, null=True)),
                ('source_tissue', models.CharField(blank=True, choices=[('brain', 'brain'), ('brain_hippocampus', 'brain_hippocampus'), ('brain_cortex', 'brain_cortex'), ('brain_cerebellum', 'brain_cerebellum'), ('blood', 'blood'), ('liver', 'liver'), ('adipose', 'adipose'), ('skin', 'skin')], max_length=100, null=True)),
                ('conc', models.FloatField(blank=True, default=0, null=True)),
                ('vol', models.FloatField(blank=True, default=0, null=True)),
                ('weight', models.FloatField(blank=True, default=0, null=True)),
                ('cells', models.FloatField(blank=True, default=0, null=True)),
                ('alt_name1', models.CharField(blank=True, max_length=100, null=True)),
                ('alt_name2', models.CharField(blank=True, max_length=100, null=True)),
                ('species', models.CharField(blank=True, choices=[('Homo_sapiens', 'Homo_sapiens'), ('Mus_musculus', 'Mus_musculus')], max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Unknown', 'Unknown')], max_length=10, null=True)),
                ('family_id', models.CharField(blank=True, max_length=100, null=True)),
                ('relationship', models.CharField(blank=True, max_length=30, null=True)),
                ('study_model', models.CharField(blank=True, max_length=30, null=True)),
                ('case_control', models.CharField(blank=True, max_length=30, null=True)),
                ('collected_by', models.CharField(blank=True, max_length=30, null=True)),
                ('date_collected', models.IntegerField(blank=True, null=True)),
                ('collection_batch', models.CharField(blank=True, max_length=30, null=True)),
                ('year_of_birth', models.IntegerField(blank=True, null=True)),
                ('race', models.CharField(blank=True, max_length=30, null=True)),
                ('ethnicity', models.CharField(blank=True, max_length=30, null=True)),
                ('date_of_birth', models.IntegerField(blank=True, null=True)),
                ('strain', models.CharField(blank=True, max_length=30, null=True)),
                ('brood', models.CharField(blank=True, max_length=30, null=True)),
                ('cell_line_id', models.CharField(blank=True, max_length=30, null=True)),
                ('passage_number', models.CharField(blank=True, max_length=30, null=True)),
                ('cell_line_mutation', models.CharField(blank=True, max_length=30, null=True)),
                ('cell_line_type', models.CharField(blank=True, choices=[('LCL', 'LCL'), ('iPS', 'iPS'), ('NSC', 'NSC'), ('iNeurons', 'iNeurons'), ('fibroblast', 'fibroblast')], max_length=100, null=True)),
                ('karyotype', models.CharField(blank=True, max_length=100, null=True)),
                ('genetic_array', models.CharField(blank=True, max_length=100, null=True)),
                ('other_genetic_info', models.CharField(blank=True, max_length=200, null=True)),
                ('freezer_name', models.CharField(blank=True, max_length=50, null=True)),
                ('freezer_type', models.CharField(blank=True, choices=[('-80', '-80'), ('LN2', 'LN2'), ('-20', '-20'), ('Fridge', 'Fridge')], max_length=20, null=True)),
                ('freezer_shelf', models.IntegerField(blank=True, null=True)),
                ('freezer_rack', models.IntegerField(blank=True, null=True)),
                ('freezer_row', models.IntegerField(blank=True, null=True)),
                ('freezer_column', models.IntegerField(blank=True, null=True)),
                ('box_name', models.CharField(blank=True, max_length=50, null=True)),
                ('box_type', models.CharField(blank=True, choices=[('box', 'box'), ('matrix_box', 'matrix_box'), ('plate', 'plate')], max_length=20, null=True)),
                ('aliquot_pos_row', models.IntegerField(blank=True, null=True)),
                ('aliquot_pos_column', models.IntegerField(blank=True, null=True)),
            ],
        ),
    ]
